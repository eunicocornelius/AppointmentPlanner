{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","onChange","contacts","value","map","contact","index","name","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","target","Tile","data","dataList","Object","values","className","TileList","AppointmentsPage","appointments","addAppointments","useState","e","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","props","addContacts","phoneNumber","setPhoneNumber","nameDupe","setNameDupe","useEffect","alert","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffa73e28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({onChange, contacts}) => {\r\n  return (\r\n    <select onChange={onChange}>\r\n      <option value=\"\">Select a Contact</option>\r\n      {\r\n        contacts.map((contact, index)=>{\r\n          return <option value={contact.name} key={index}>{contact.name}</option>\r\n        })\r\n      }\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {ContactPicker} from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" onChange={({target})=>setTitle(target.value)} value={title}/>\r\n      <input type=\"date\" onChange={({target})=>setDate(target.value)} value={date}/>\r\n      <input type=\"time\" onChange={({target})=>setTime(target.value)} value={time}/>\r\n      <ContactPicker onChange={({target})=>setContact(target.value)} contacts={contacts} value={contact}/>\r\n      <input type=\"submit\"/>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({data}) => {\r\n  const dataList = Object.values(data);\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {\r\n        dataList.map((value, index)=>{\r\n          if(index === 0){\r\n            return <p className=\"tile-title\" key={index} >{value}</p>\r\n          }else{\r\n            return <p className=\"tile\" key={index} >{value}</p>\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from '../tile/Tile';\r\n\r\nexport const TileList = ({data}) => {\r\n  return (\r\n    <div>\r\n      {\r\n        data.map((value,index)=>{\r\n          return <Tile data={value} key={index}/>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React,{useState} from \"react\";\r\nimport {AppointmentForm} from '../../components/appointmentForm/AppointmentForm';\r\nimport {TileList} from '../../components/tileList/TileList';\r\n\r\nexport const AppointmentsPage = ({appointments, contacts, addAppointments}) => {\r\n  const [title, setTitle] = useState('')\r\n  const [contact, setContact] = useState('')\r\n  const [date, setDate] = useState('')\r\n  const [time, setTime] = useState('')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    addAppointments(title, contact, date, time);\r\n    // Values Reset\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm \r\n          title={title} \r\n          setTitle={setTitle} \r\n          contact={contact} \r\n          setContact={setContact} \r\n          date={date} \r\n          setDate={setDate} \r\n          time={time} \r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n          contacts={contacts}  \r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n          <TileList data={appointments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" onChange={({target})=>{setName(target.value)}} value={name}/> \r\n      <input type=\"tel\" onChange={({target})=>{setPhone(target.value)}} value={phone} pattern=\"(^\\+[0-9]{2}|^\\+[0-9]{2}\\(0\\)|^\\(\\+[0-9]{2}\\)\\(0\\)|^00[0-9]{2}|^0)([0-9]{9}$|[0-9\\-\\s]{10}$)\"/> \r\n      <input type=\"email\" onChange={({target})=>{setEmail(target.value)}} value={email}/> \r\n      <input type=\"submit\"/>\r\n    </form>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {ContactForm} from '../../components/contactForm/ContactForm';\r\nimport {TileList} from '../../components/tileList/TileList';\r\n\r\nexport const ContactsPage = (props) => {\r\n  \r\n  // Extract props variables\r\n  const contacts = props.contacts;\r\n  const addContacts = props.addContacts;\r\n\r\n  // Declare useState for each variables\r\n  const [name, setName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [nameDupe, setNameDupe] = useState(false);\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if(!nameDupe){\r\n      addContacts(name, phoneNumber, email);\r\n      setName('');\r\n      setPhoneNumber('');\r\n      setEmail('');\r\n    }\r\n    else{\r\n      setNameDupe(false);\r\n      alert('Name already existed!');\r\n    }\r\n  };\r\n\r\n  \r\n  useEffect( () => {\r\n    for (const contact of contacts) {\r\n      if (name === contact.name) {\r\n        setNameDupe(true);\r\n      }\r\n      else{\r\n\r\n        return;\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          name={name}\r\n          phone={phoneNumber}\r\n          email={email}\r\n          setName={setName}\r\n          setPhone={setPhoneNumber}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList data={props.contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  \r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addContacts = (name, phoneNumber, email) =>{\r\n    setContacts((prev) => [\r\n      ...prev,\r\n      {\r\n        name: name,\r\n        phoneNumber: phoneNumber,\r\n        email: email,\r\n      }\r\n    ])\r\n  }\r\n  const addAppointments = (title, contact, date, time) =>{\r\n    setAppointments((prev) => [\r\n      ...prev,\r\n      {\r\n        title: title,\r\n        contact: contact,\r\n        date: date,\r\n        time: time,\r\n      }\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContacts={addContacts}/>\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage appointments={appointments} contacts={contacts} addAppointments={addAppointments}/>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}